\documentclass{article}
%\documentclass[14pt]{extarticle}
\usepackage[margin=3cm]{geometry}
\usepackage{graphicx}
\usepackage{url}
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{svg}
\title{Visualizing Mathematical Models,\\
2022 Mississippi Governor's School}

\author{\includegraphics[width=\textwidth]{mgs-2022.jpg}\\Dr.\ Jim\ Newton}
\begin{document}


\maketitle
\sloppy


\section{Objectives}


You are a scholar participating in the 2022 Mississippi Governor's
School major course Advanced Mathematical Concepts, and Functional
Programming.  There are several objectives of this course:
\begin{description}
  \item[Mathematics] to develop
or ameliorate their love for Mathematics
\item[Computer Science] to learn about functional
programming by applying programming principles to mathematical
principles which you'll learn along the way,
\item[Communication] to reenforce your ability and confidence to explain and defend your ideas
\end{description}

In this course you will learn many cursory things along the fast
and hectic journey.  It is critical that the leaders of tomorrow,
especially the leaders in the technology sector, understand the impact
on humans of technological development, especially decisions made in
haste under project pressure.  These aspects include knowing how to
apply abstract concepts to real computation problems, and how to
explain their ideas and defend their decisions to their peers.
Scientific discussions can sometimes become heated and experts might
disagree about the best course of action.  We'll learn to keep
disagreements objective and use science to test ideas, rather than
relying on emotions.

It is my belief that you don't understand something until you can
explain it.  Additionally, many ideas are lost because the developer
neglected to share his ideas.  After each unit, some students will
present their solutions to their peers.  This means defending your
choices, recognizing strengths and shortcomings, and being subjected
to peer review (important in the scientific process).  This exercise
is intended not only to learn to accept constructive criticism but
also to build confidence.


\section{Overview}

The scholars will proceed through up to 6 units, perhaps fewer if we
decide to dig deeper into particular ones.  Each unit will be
organized into three stages
\begin{itemize}
\item Theory --- Learn mathematics and computer science concepts.
\item Lab --- Implement code relating to the theory and link it to
  previous units.
\item Presentation --- Present your work to your classmates, and
  defend your decisions.
  \end{itemize}



\pagebreak
\section{Syllabus}


\subsection{Sets and Functions}
\includegraphics[width=8cm]{Venn-A-intersect-B.png}
\footnote{By Ethaniel --- \url{https://en.wikipedia.org/wiki/Monoid#/media/File:Magma_to_group4.svg}, CC0, \url{https://commons.wikimedia.org/w/index.php?curid=98106965}.}
\begin{itemize}
\item Mathematical perspective
\begin{enumerate}
\item Definition of set.

\item Axioms of sets, empty set, element relation, subset relation, union,
intersection, complement, power set, comprehension, Cartesian product

\item Definition of function.

\item logical operators, existance $\exists$, for all $\forall$, implies $\implies$
  
\item Intuition and definition using Cartesian
product.  Injection, surjection, inverse function, isomorphism.


\includegraphics[height=4cm]{function.png}\quad
\includegraphics[height=4cm]{bijective.png}\footnote{Borrowed from \url{https://www.mathsisfun.com/sets/injective-surjective-bijective.html}.}


\item Equivalence classes

\item Examples of sets, finite sets, infinite sets (natural numbers,
integers, rational, real numbers, complex numbers)

\item countable (homomorphic to integers), uncountable

\end{enumerate}

\item Programming perspective
\begin{enumerate}
\item Programming languages, functional, imperative

\item Scala and IDE
  
\item Types, atomic types: (Double, Int, Boolean)

\item Container types: List, Set, Vector, Map

\item forall and exists methods

\item String, sort of atomic, sort of container

\item Function types

\item Testing
  
\item Version control, branch, pull request, pull
\end{enumerate}

\item Coding

\begin{enumerate}
\item write a function to determine whether a sequence of pairs designates a relation
\item write a function to determine whether a sequence of pairs designates a function
\item decide whether such a function is injective, surjective, bijective.
\item compute the union, intersection, and complement
\item implement a subset function and an equivalence function based on your subset function.
\end{enumerate}
\end{itemize}
  
\pagebreak
\subsection{Abstract Algebra --- Sets with mathematical structure}
\includegraphics[width=8cm]{Algebraic-structures-magma-to-group.png}
\begin{itemize}
\item Mathematical perspective
  \begin{enumerate}
  \item Monoids
  \item Group
  \item Ring
  \item Fields
  \item Vector Space
  \item operators and algebraic axioms,
    commutativity, associativity, invertability, nullification.
  \end{enumerate}
  
\item Programming perspective
  \begin{enumerate}
  \item Monoid of string concatenation
  \item Monoid List concatenation
  \item Monoid Set union
  \item Monoid of function application
  \item Map[] type (polynomial as motivating example)
  \item Ring of polynomials (polynomial add, subtract, multiply)
  \item Ring of matrix (matrix add, subtract, multiply)
  \item Property based testing
  \end{enumerate}

\item Coding
\begin{enumerate}
\item partition a set into equivalence classes
\item generalize to partition based on equivalence of probe function.
\item rewrite step 1 in terms of 2
\item Implement exponentiation of Double
\item Generalize to implement exponentiation on a monoid 
\item implement matrix, add, subtract, multiply
    multiplication.  
\item Test structural axioms (commutativity etc), Property based testing
\item Complex numbers as special case of $2\times 2$ matrix.

\item Implement the polynomial ring, with addition,
  subtraction, multiplication
\item Implement polynomial exponentiation
\end{enumerate}
\end{itemize}

  
\pagebreak\subsection{Convergence}
\includegraphics[width=14cm]{Archimedes-pi.png}
\footnote{By Original: FredrikVector: Leszek Krupinski --- Own work based on: Archimedes pi.png:  by Fredrik, Public Domain, \url{https://commons.wikimedia.org/w/index.php?curid=1250248}.}

  We will discuss distinguishing between Cauchy sequences and
    convergent sequences.  
\begin{itemize}
\item Mathematical perspective
  \begin{enumerate}
  \item The limit is the most fundamental concept in
    Calculus.
    \[\lim_{n\to\infty} a_n = a\] means that $\forall~\varepsilon > 0~ \exists~ N\in\mathbb{N}$ such that if $n>N$ then $|a_n - a| < \varepsilon$.
  \item limits in terms of sequences and
    convergence,
    A sequence $\{a\}_n$ converges to $a$, written $a_n\to a$, if \[\lim_{n\to\infty} a_n = a\,.\]

  \item Cauchy vs convergent.
      A sequence is $\{a\}_n$ is said to be Cauchy, if $\forall~\varepsilon > 0~ \exists~ N\in\mathbb{N}$ such that if $n>N$ and $m>N$ then $|a_n - a_m| < \varepsilon$.
    
    \includegraphics[width=9cm]{Folgenglieder_im_KOSY.png}
    \footnote{By Ceranilo, CC BY-SA 4.0, https://commons.wikimedia.org/w/index.php?curid=54837240}
    \\Example of a sequence which converges to the limit $a$.
    
    \includegraphics[width=9cm]{Epsilonschlauch.png}
    \footnote{By Ceranilo, CC BY-SA 4.0, https://commons.wikimedia.org/w/index.php?curid=54836520}
    \\Regardless which $\varepsilon >0$ we have, there is an index $N_0$, so that the sequence lies afterwards completely in the epsilon tube $(a-\varepsilon ,a+\varepsilon)$.
.

    
    \includegraphics[width=9cm]{Epsilonschlauch-klein.png}
    \footnote{By Ceranilo, CC BY-SA 4.0,
    https://commons.wikimedia.org/w/index.php?curid=54836607} \\There is
    also for a smaller $\varepsilon_{1}>0$, an index $N_{1}$, so that
    the sequence is afterwards inside the epsilon tube
    $(a-\varepsilon_{1},a+\varepsilon_{1}$.
  \end{enumerate}
  
\item Programming perspective
  \begin{enumerate}
  \item recursion
  \item tail recursion,
  \item folding.
  \item higher order functions, 
  \end{enumerate}

\item Coding
\begin{enumerate}
\item Implement the limit function as a function which
    manipulates functions.
\item Detect convergence of sequences.
\item Contrast implementations of recursion, iteration, and folding.
\end{enumerate}



\end{itemize}

\pagebreak\subsection{Infinite sums}

\includegraphics[width=10cm]{sintay.png}\footnote{By IkamusumeFan --- Own work, CC BY-SA 3.0, \url{https://commons.wikimedia.org/w/index.php?curid=27865201}}
\\As the degree of the Taylor polynomial rises, it approaches the correct function.
This image shows $\sin x$ and its Taylor approximations by polynomials of degree 1, 3, 5, 7, 9, 11, and 13 at $x = 0$.
\begin{itemize}
\item Mathematical perspective
  \begin{enumerate}
  \item Contrast convergence and summability.
  \end{enumerate}
  
\item Programming perspective
  \begin{enumerate}
  \item review foldLeft
  \item introduce foldM
  \end{enumerate}

\item Coding
\begin{enumerate}
\item Implement the sin, cos, and exp functions in terms
  of the infinite Taylor series
\item understanding conditions of convergence, avoiding infinite loops.
\item Improve convergence using shifting and scaling.
\item Compute sin and cos of square matrices.
\item Compute sin and cos of complex numbers using 2x2 matrix
\end{enumerate}
\end{itemize}

\pagebreak\subsection{Differential Calculus}
\noindent\includegraphics[width=10cm]{Secant-calculus.png}
\footnote{By derivative work: Pbroks13 (talk) \text{Secant--calculus.png}: Shizhao --- \text{Secant--calculus.png}, CC BY-SA 3.0, \url{https://commons.wikimedia.org/w/index.php?curid=4369993}}
\\The secant to curve $y= f(x)$ determined by points $(x, f(x))$ and $(x + h, f(x + h))$.


\noindent\includegraphics[width=10cm]{Lim-secant.png}
\footnote{By derivative work: Pbroks13 (talk) \text{Lim-secant.png}: The original uploader was CSTAR at English Wikipedia. --- \text{Lim-secant.png}, CC BY-SA 3.0, \url{https://commons.wikimedia.org/w/index.php?curid=4370022}}
\\The tangent line as limit of secants.


\noindent\includegraphics[width=10cm]{Tangent-calculus.png}
\footnote{By derivative work: Pbroks13 (talk) \text{Tangent-calculus.png}: Rhythm --- \text{Tangent-calculus.png}, CC BY-SA 3.0, \url{https://commons.wikimedia.org/w/index.php?curid=4369975}}
\\The tangent line at $(x, f(x))$.

\begin{itemize}
\item Mathematical perspective
  \begin{enumerate}
  \item intuition of derivative
  \item Linearity
  \item Definition of derivative
  \item Linearity using derivative
  \item Derivative of polynomial using induction and linearity
  \end{enumerate}
  
\item Programming perspective
  \begin{enumerate}
  \item Definition of derivative in terms of limit,
  \item derivative of polynomial
  \end{enumerate}


\item Coding
\begin{enumerate}
\item compute derivative by successive approximation using
the previous implementation of limit.
\item Compute exact derivative of a polynomial
\item compare two approaches numerically.
\item Compute cos in terms of derivative of sin,
\item compare to Taylor series computation.

\end{enumerate}
\end{itemize}

\pagebreak\subsection{Integral Calculus}
\includegraphics[width=13cm]{Riemann-sum-convergence.png}
\footnote{By I, KSmrq, CC BY-SA 3.0, \url{https://commons.wikimedia.org/w/index.php?curid=2347919}}
\\Riemann sums converging.

\begin{itemize}
\item Mathematical perspective
  \begin{enumerate}
  \item Understanding the Riemann in terms of infinite
    sums of rectangle and trapezoid areas.
  \item integral of polynomial
  \end{enumerate}
  
\item Programming perspective
  \begin{enumerate}
  \item experessing limit of sum of rectangles/trapezoids
    

  \end{enumerate}

\includegraphics[width=8cm]{Integration-num-trapezes-notation.png}
\footnote{By Scalerderivative work: Cdang (talk), CC BY-SA 3.0, \url{https://commons.wikimedia.org/w/index.php?curid=8541370}}
\\Illustration of ``chained trapezoidal rule'' used on an irregularly-spaced partition of 
$[a,b]$.


\item Coding
\begin{enumerate}
\item  Implement integral (function of function) using
  limit.
\item Compute explicit integral of polynomial
\item compute volume of a sphere (actually of half a sphere)
\end{enumerate}
\end{itemize}




\end{document}



% LocalWords:  EPITA priori epita www luke edu Sentier Etroites Issy
% LocalWords:  Moulineaux gmail les des GitHub IDE GitKraken IntelliJ
% LocalWords:  gitkraken dev MUW GitLab Collaboratory msstate cse com
% LocalWords:  HDMI Lethbridge https uleth ca jpg Programmatic meetup
% LocalWords:  BucharestJS ozassignments png colorized jnewton jimka
% LocalWords:  issy pastpresentfuture thispublicdiary illinois pdf
% LocalWords:  NevadaClassClose techservices teamwork MCCRS MDE usna
% LocalWords:  SEC OAE org mdek xkcd lrde mgs Modularity Scala monoid
% LocalWords:  invertability 2x2
