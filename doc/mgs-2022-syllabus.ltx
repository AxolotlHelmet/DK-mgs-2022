\documentclass{article}
%\documentclass[14pt]{extarticle}
\usepackage[margin=3cm]{geometry}
\usepackage{graphicx}
\usepackage{url}

\title{Visualizing Mathematical Models,\\
2022 Mississippi Governor's School}

\author{\includegraphics[width=\textwidth]{mgs-2022.jpg}\\Dr.\ Jim\ Newton}
\begin{document}


\maketitle
\sloppy


\section{Objectives}


You are a scholar participating in the 2022 Mississippi Governor's
School major course Advanced Mathematical Concepts, and Functional
Programming.  There are several objectives of this course:
\begin{description}
  \item[Mathematics] to develop
or ameliorate their love for Mathematics
\item[Computer Science] to learn about functional
programming by applying programming principles to mathematical
principles which you'll learn along the way,
\item[Communication] to reenforce your ability and confidence to explain and defend your ideas
\end{description}

In this course you will learn many cursory things along the fast
and hectic journey.  It is critical that the leaders of tomorrow,
especially the leaders in the technology sector, understand the impact
on humans of technological development, especially decisions made in
haste under project pressure.  These aspects include knowing how to
apply abstract concepts to real computation problems, and how to
explain their ideas and defend their decisions to their peers.
Scientific discussions can sometimes become heated and experts might
disagree about the best course of action.  We'll learn to keep
disagreements objective and use science to test ideas, rather than
relying on emotions.

It is my belief that you don't understand something until you can
explain it.  Additionally, many ideas are lost because the developer
neglected to share his ideas.  After each unit, some students will
present their solutions to their peers.  This means defending your
choices, recognizing strengths and shortcomings, and being subjected
to peer review (important in the scientific process).  This exercise
is intended not only to learn to accept constructive criticism but
also to build confidence.


\section{Overview}

The scholars will proceed through up to 6 units, perhaps fewer if we
decide to dig deeper into particular ones.  Each unit will be
organized into three stages
\begin{itemize}
\item Theory --- Learn mathematics and computer science concepts.
\item Lab --- Implement code relating to the theory and link it to
  previous units.
\item Presentation --- Present your work to your classmates, and
  defend your decisions.
  \end{itemize}




\section{Syllabus}


\subsection{Sets and Functions}
\begin{itemize}
\item Mathematical point of view
\begin{enumerate}
\item Definition of set.

\item Axioms of sets, empty set, element relation, subset relation, union,
intersection, complement, power set, comprehension, Cartesian product

\item Definition of function.

\item logical operators, existance $\exists$, for all $\forall$, implies $\implies$
  
\item Intuition and definition using Cartesian
product.  Injection, surjection, inverse function, isomorphism.

%% borrowed from https://www.mathsisfun.com/sets/injective-surjective-bijective.html
\includegraphics[height=4cm]{function.png}\quad
\includegraphics[height=4cm]{bijective.png}


\item Equivalence classes

\item Examples of sets, finite sets, infinite sets (natural numbers,
integers, rational, real numbers, complex numbers)

\item countable (homomorphic to integers), uncountable

\end{enumerate}

\item Computer Science point of view
\begin{enumerate}
\item Programming languages, functional, imperative

\item Scala and IDE
  
\item Types, atomic types: (Double, Int, Boolean)

\item Container types: List, Set, Vector, Map

\item forall and exists methods

\item String, sort of atomic, sort of container

\item Function types

\item Testing
  
\item Version control
\end{enumerate}
\end{itemize}
\subsubsection{Coding}

\begin{enumerate}
\item write a function to determine whether a sequence of pairs designates a relation
\item write a function to determine whether a sequence of pairs designates a function
\item decide whether such a function is injective, surjective, bijective.
\item compute the union, intersection, and complement
\item implement a subset function and an equivalence function based on your subset function.
\item partition a set into equivalence classes
\item generalize to partition based on equivalence of probe function.
\item rewrite step 5 in terms of 6.
\end{enumerate}

  
\subsection{Abstract Algebra --- Sets with mathematical structure}
Monoids, fields, operators and algebraic axioms,
    commutativity, associativity, invertability, nullification.
Test structural axioms (commutativity etc),
    implement exponentiation on a monoid, implement matrix
    multiplication.  Implement the polynomial ring, with addition,
    scaling, subtraction multiplication, and exponentiation.
  
\subsection{Convergence}
The limit is the most fundamental concept in
    Calculus.  We will discuss limits in terms of sequences and
    convergence, distinguishing between Cauchy sequences and
    convergent sequences.  Coding strategies such as tail recursion,
    iteration, and folding.
\subsubsection{Coding}
Implement the limit function as a function which
    manipulates functions.  Detect convergence of sequences.
    Contrast implementations of recursion, iteration, and folding.



\subsection{Infinite sums}
Contrast convergence and summability.
\subsubsection{Coding}
Implement the sin, cos, and exp functions in terms
    of the infinite Taylor series, understanding conditions of
    convergence, avoiding infinite loops.  Improve convergence using
    shifting and scaling. Compute sin and cos of square matrices.
    Complex numbers as special case of 2x2 matrix.


\subsection{Differential Calculus}
Definition of derivative in terms of limit,
    linearity, derivative of polynomial using mathematical induction.
\subsubsection{Coding}
compute derivative by successive approximation using
    the previous implementation of limit.  Compute exact derivative of
    a polynomial, and compare two approaches numerically.  Compute sin
    and cos in terms of derivative, and compare to Taylor series
    computation.


\subsection{Integral Calculus}
Understanding the Riemann in terms of infinite
    sums of rectangle and trapezoid areas.
\subsubsection{Coding} Implement integral (function of function) using
    limit.  Compute explicit integral of polynomial



\end{document}



% LocalWords:  EPITA priori epita www luke edu Sentier Etroites Issy
% LocalWords:  Moulineaux gmail les des GitHub IDE GitKraken IntelliJ
% LocalWords:  gitkraken dev MUW GitLab Collaboratory msstate cse com
% LocalWords:  HDMI Lethbridge https uleth ca jpg Programmatic meetup
% LocalWords:  BucharestJS ozassignments png colorized jnewton jimka
% LocalWords:  issy pastpresentfuture thispublicdiary illinois pdf
% LocalWords:  NevadaClassClose techservices teamwork MCCRS MDE usna
% LocalWords:  SEC OAE org mdek xkcd lrde mgs Modularity Scala monoid
% LocalWords:  invertability 2x2
